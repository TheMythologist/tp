@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

Class GreyBookParser
Class CommandRegistry
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command


Class "<<interface>>\nLogic" as Logic
Class LogicManager
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic

' LogicManager dependencies
LogicManager -right->"1" GreyBookParser : uses >
LogicManager .left.> Command : calls execute() >

' Command setup flow
CommandRegistry .down.> GreyBookParser : registers commands >
CommandRegistry ..> XYZCommand : declares >

' Parsing flow
GreyBookParser ..> Command : stores command instances >

' Command structure
XYZCommand -up-|> Command
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc

LogicManager --> Model
LogicManager --> Storage
Command .right.> Model

' Command result creation
Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : <<create>>

' Hidden link
Storage --[hidden] Model

@enduml
