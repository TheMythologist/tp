@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":GreyBookParser" as GreyBookParser LOGIC_COLOR
participant "cp:CommandParser" as CommandParser LOGIC_COLOR
participant "arg:ArgumentParseResult" as ArgumentParseResult LOGIC_COLOR
participant "u:UndoCommand" as UndoCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("undo")
activate LogicManager

LogicManager -> GreyBookParser : parse("undo")
activate GreyBookParser
note right: Gets 'undo' CommandParser

GreyBookParser -> CommandParser : parse("")
activate CommandParser

create ArgumentParseResult
CommandParser -> ArgumentParseResult
activate ArgumentParseResult

ArgumentParseResult --> CommandParser : arg
deactivate ArgumentParseResult

CommandParser --> GreyBookParser : arg
deactivate CommandParser

GreyBookParser --> LogicManager : arg
deactivate GreyBookParser

' Execution is delegated to the ArgumentParseResult wrapper
LogicManager -> ArgumentParseResult : execute(m)
activate ArgumentParseResult

' ArgumentParseResult internally calls the command execution
ArgumentParseResult -> UndoCommand : execute(m, arg)
activate UndoCommand

UndoCommand -> Model : undoGreyBook()
activate Model

Model --> UndoCommand
deactivate Model

create CommandResult
UndoCommand -> CommandResult
activate CommandResult

CommandResult --> UndoCommand : r
deactivate CommandResult

UndoCommand --> ArgumentParseResult : r
deactivate UndoCommand

ArgumentParseResult --> LogicManager : r
deactivate ArgumentParseResult

[<--LogicManager
deactivate LogicManager
@enduml
